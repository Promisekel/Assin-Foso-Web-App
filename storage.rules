rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // User profile pictures
    match /profiles/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
         getUserRole() == 'admin') &&
        request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }
    
    // Research publication files
    match /publications/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        getUserRole() in ['admin', 'researcher'] &&
        request.resource.size < 50 * 1024 * 1024; // 50MB limit
    }
    
    // Gallery images
    match /gallery/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        getUserRole() in ['admin', 'researcher'] &&
        request.resource.size < 20 * 1024 * 1024; // 20MB limit
    }
    
    // Project files
    match /projects/{projectId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (getUserRole() in ['admin', 'researcher'] ||
         isProjectMember(projectId)) &&
        request.resource.size < 100 * 1024 * 1024; // 100MB limit
    }
    
    // Documents and knowledge base files
    match /documents/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        getUserRole() in ['admin', 'researcher'] &&
        request.resource.size < 25 * 1024 * 1024; // 25MB limit
    }
    
    // Admin uploads
    match /admin/{allPaths=**} {
      allow read, write: if request.auth != null && 
        getUserRole() == 'admin' &&
        request.resource.size < 100 * 1024 * 1024; // 100MB limit
    }
    
    // Helper function to get user role
    function getUserRole() {
      return firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role;
    }
    
    // Helper function to check project membership
    function isProjectMember(projectId) {
      return request.auth.uid in firestore.get(/databases/(default)/documents/projects/$(projectId)).data.teamMembers;
    }
  }
}
